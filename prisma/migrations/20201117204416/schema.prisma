generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model User {
  id                Int                 @id @default(autoincrement())
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  name              String?             @unique
  email             String              @unique
  photoUrl          String?
  hashedPassword    String
  role              String              @default("user")
  FollowingEvents   Event[]
  InstructedEvents  Event[]             @relation("instructorTable")
  FollowersOfEvents FollowersOfEvents[]
}

model Category {
  id    Int     @id @default(autoincrement())
  name  String
  posts Event[]
}

/// These will be the online/offline events
model Event {
  id                Int                 @id @default(autoincrement())
  title             String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  datetime          DateTime
  duration          Int // integer represents minutes
  online            Boolean?            @default(true)
  description       String?
  Instructor        User                @relation("instructorTable", fields: [instructorId], references: [id])
  instructorId      Int
  Categories        Category[]
  Location          Location?
  User              User?               @relation(fields: [userId], references: [id])
  userId            Int?
  FollowersOfEvents FollowersOfEvents[]
}

model FollowersOfEvents {
  Follower   User     @relation(fields: [followerId], references: [id])
  followerId Int
  Event      Event    @relation(fields: [eventId], references: [id])
  eventId    Int
  createdAt  DateTime @default(now())

  @@id([followerId, eventId])
}

model Location {
  id      Int   @id @default(autoincrement())
  Event   Event @relation(fields: [eventId], references: [id])
  eventId Int
  lat     Float
  lng     Float
}
